"""Logger module for {{ python_package_import_name }}."""

import logging

from rich.logging import RichHandler

from {{ python_package_import_name }}.settings import Settings

settings = Settings()

DEFAULT_LOG_FORMAT = "%(asctime)s.%(msecs)03d - %(name)s - %(message)s"
DEFAULT_DATE_FORMAT = "%Y-%m-%d %H:%M:%S"
DEFAULT_LOG_LEVEL = settings.LOGLEVEL


def get_logger(show_path: bool = False) -> logging.Logger:
    """
    Return the python Logger.

    Parameters
    ----------
    show_path: bool
        If enabled, will show the code location (filename:lineno) where the log
        was created.  Handy for debugging!
    Returns
    -------
    logging.Logger
    """
    logging.basicConfig(
        level=DEFAULT_LOG_LEVEL,
        format=DEFAULT_LOG_FORMAT,
        datefmt=DEFAULT_DATE_FORMAT,
        handlers=[
            RichHandler(
                rich_tracebacks=True,
                log_time_format=DEFAULT_DATE_FORMAT,
                show_path=show_path,
                markup=True,
            )
        ],
    )

    return logging.getLogger(__package__)
